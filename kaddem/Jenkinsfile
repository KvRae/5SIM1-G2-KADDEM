pipeline {
    agent any

    stages {
        stage('Récupération du code de GitHub') {
            steps {
                git branch: 'karamMANNAI-5SIM1-G2', credentialsId: 'Git', url: 'https://github.com/KvRae/5SIM1-G2-KADDEM.git'
                sh 'git pull origin karamMANNAI-5SIM1-G2'
            }
        }

        stage('Build avec Maven') {
            steps {
                // Change the working directory to the 'kaddem' subdirectory
                dir('kaddem') {
                    sh 'mvn clean install'
                }
            }
        }

        stage('Tests unitaires avec JUnit') {
           steps {
               // Change the working directory to the 'kaddem' subdirectory
                dir('kaddem') {

                    sh 'mvn test'
                }
           }
        }

        stage('Analyse de code avec SonarQube') {
            steps {
                // Change the working directory to the 'kaddem' subdirectory
                dir('kaddem') {

                    withSonarQubeEnv('SonarQube') {
                        sh 'mvn sonar:sonar'
                    }
                }
            }
        }

        stage('Deploiment Artifact a Nexus') {
           steps {
               // Change the working directory to the 'kaddem' subdirectory
                dir('kaddem') {
                    sh "mvn deploy -DskipTests"
                }
           }
        }

        stage('Build image Docker ') {
            steps {
                dir('kaddem') {
                    script {
                        docker.build("kvrae/kaddem:${env.BUILD_NUMBER}")
                    }
                }
            }
        }

        stage('Push To Docker Hub') {
            steps {
                dir('kaddem'){
                    script {
                        docker.withRegistry('https://registry.hub.docker.com', 'Docker') {
                            docker.image("kvrae/kaddem:${env.BUILD_NUMBER}").push()
                        }
                    }
                }*

            }
        }

        stage('Run Docker Compose') {
            steps {
                script {
                    sh 'docker compose up -d'
                }
            }
        }
    }
}