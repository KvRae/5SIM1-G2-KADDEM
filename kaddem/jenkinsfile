pipeline {
    agent any

    environment {
            DOCKER_HUB_CREDENTIALS = credentials('dckr_pat_IWdFyWT0zRzJ6kRLQWud5AK219c') // Add your Docker Hub credentials ID
            DOCKER_IMAGE_NAME = 'yassinearidhi/yassine_aridhi_5sim1_g2_kaddem'
            DOCKER_IMAGE_TAG = '1.00' // Change to your desired tag
        }

    stages {
        stage('Checkout GIT') {
            steps {
                echo 'Pulling...'
                git branch: 'yassineAridhi_5sim1_G2', url: 'https://github.com/KvRae/5SIM1-G2-KADDEM.git'
            }
        }

        stage('Build avec Maven') {
            steps {
                // Change the working directory to the 'kaddem' subdirectory
                dir('kaddem') {
                    sh 'mvn clean compile'
                }
            }
        }

         stage('MVN SONARQUBE') {
            steps {
                    dir('kaddem'){
                        withSonarQubeEnv('sonarqube') {
                            sh 'mvn sonar:sonar'
                        }
                    }


            }
        }

        stage('Run Unit Tests'){
            steps{
                dir('kaddem'){
                    sh 'mvn test'
                }
            }

        }

        stage('MVN Nexus') {
                   steps {

                        dir('kaddem') {
                            sh "mvn deploy -DskipTests"
                        }
                   }
        }

        stages {
                stage('Build') {
                    steps {
                        script {
                            // Build the Docker image
                            dockerImage = docker.build("${DOCKER_IMAGE_NAME}:${DOCKER_IMAGE_TAG}")
                        }
                    }
                }

                stage('Push') {
                    steps {
                        script {
                            // Log in to Docker Hub
                            docker.withRegistry('https://registry.hub.docker.com', DOCKER_HUB_CREDENTIALS) {
                                // Push the Docker image to Docker Hub
                                dockerImage.push("${DOCKER_IMAGE_TAG}")
                            }
                        }
                    }




    }
}